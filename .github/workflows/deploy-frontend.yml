name: Deploy Frontend to S3

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  S3_BUCKET: iguanas-jewelry-frontend
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC authentication
      contents: read    # Required to checkout code
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Skipping tests in deployment - run tests in PR workflow instead
      # - name: Run tests
      #   run: npm test -- --coverage --watchAll=false

      - name: Build application
        run: npm run build
        env:
          CI: false  # Treat warnings as warnings, not errors
          REACT_APP_API_URL: "https://api.iguanasjewellery.com"
          REACT_APP_STRIPE_PUBLISHABLE_KEY: ${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::264669033021:role/github-actions-role
          aws-region: eu-west-1
          audience: sts.amazonaws.com

      - name: Deploy to S3
        run: |
          # Install AWS CLI if not available
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          
          # Sync build files to S3
          aws s3 sync build/ s3://${{ env.S3_BUCKET }} \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html" \
            --exclude "robots.txt" \
            --exclude "sitemap.xml"
          
          # Upload HTML files with no-cache headers
          aws s3 sync build/ s3://${{ env.S3_BUCKET }} \
            --cache-control "no-cache, no-store, must-revalidate" \
            --include "*.html"
          
          # Upload robots.txt and sitemap.xml with appropriate headers
          aws s3 cp build/robots.txt s3://${{ env.S3_BUCKET }}/robots.txt \
            --cache-control "public, max-age=86400"
          
          aws s3 cp build/sitemap.xml s3://${{ env.S3_BUCKET }}/sitemap.xml \
            --cache-control "public, max-age=86400"

      - name: Invalidate CloudFront cache
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -n "${{ env.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation \
              --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
              --paths "/*"
          else
            echo "CloudFront distribution ID not provided, skipping cache invalidation"
          fi